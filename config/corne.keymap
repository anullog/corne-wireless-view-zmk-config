/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    tapping-term-ms = <175>;
};

/ {
    behaviors {
        cmd: cmd {
            compatible = "zmk,behavior-sticky-key";
            label = "CMD";
            bindings = <&kp>;
            #binding-cells = <1>;
            ignore-modifiers;
            release-after-ms = <1000>;
            quick-release;
        };
        shift: shift {
            compatible = "zmk,behavior-sticky-key";
            label = "SHIFT";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <1000>;
            quick-release;
            ignore-modifiers;
        };
        alt: alt {
            compatible = "zmk,behavior-sticky-key";
            label = "ALT";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <1000>;
            quick-release;
            ignore-modifiers;
        };
        ctrl: ctrl {
            compatible = "zmk,behavior-sticky-key";
            label = "CTRL";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <1000>;
            ignore-modifiers;
            quick-release;
        };
    };

    macros {
        copy: copy {
            compatible = "zmk,behavior-macro";
            label = "COPY";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LEFT_COMMAND>;
        };
        undo: undo {
            compatible = "zmk,behavior-macro";
            label = "UNDO";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND>,
                <&macro_tap>,
                <&kp Z>,
                <&macro_release>,
                <&kp LEFT_COMMAND>;
        };
        paste: paste {
            compatible = "zmk,behavior-macro";
            label = "PASTE";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LEFT_COMMAND>;
        };
        cut: cut {
            compatible = "zmk,behavior-macro";
            label = "CUT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_COMMAND>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LEFT_COMMAND>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
          &kp ESC  &kp Q  &kp L      &kp Y      &kp P              &kp B            &kp Z  &kp F        &kp O      &kp U  &kp SINGLE_QUOTE    &kp DELETE
        &lt 3 TAB  &kp C  &kp R      &kp S      &kp T              &kp G            &kp M  &kp N        &kp E      &kp I             &kp A   &lt 2 ENTER
&shift LEFT_SHIFT  &kp W  &kp J      &kp V      &kp D              &kp K            &kp X  &kp H    &kp SLASH  &kp COMMA        &kp PERIOD  &kp LEFT_ALT
                                 &cmd LCMD  &kp SPACE  &shift LEFT_SHIFT    &kp BACKSPACE  &mo 1  &ctrl LCTRL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans        &kp GRAVE  &kp LESS_THAN  &kp GREATER_THAN  &kp DOUBLE_QUOTES      &kp PERIOD    &kp AMPERSAND        &kp LEFT_BRACE  &kp SEMICOLON        &kp RIGHT_BRACE   &kp PERCENT  &trans
&trans  &kp EXCLAMATION      &kp MINUS          &kp PLUS          &kp EQUAL        &kp HASH         &kp PIPE  &kp LEFT_PARENTHESIS      &kp COLON  &kp RIGHT_PARENTHESIS  &kp QUESTION  &trans
&trans        &kp CARET  &kp BACKSLASH      &kp ASTERISK         &kp DOLLAR  &kp UNDERSCORE        &kp TILDE      &kp LEFT_BRACKET      &kp SLASH      &kp RIGHT_BRACKET        &kp AT  &trans
                                                  &trans             &trans           &mo 4           &trans                &trans         &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans
&trans         &none         &none         &none         &none         &none           &none  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6         &none  &trans
&trans         &undo          &cut         &copy        &paste         &none           &none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3         &none  &trans
                                          &trans        &trans        &trans          &trans  &kp NUMBER_0        &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &none          &none  &kp HOME        &none   &none     &none     &none    &kp UP      &none  &none  &trans
&trans  &none  &kp PAGE_DOWN   &kp END  &kp PAGE_UP   &none     &none  &kp LEFT  &kp DOWN  &kp RIGHT  &none  &trans
&trans  &undo           &cut     &copy       &paste   &none     &none     &none     &none      &none  &none  &trans
                                &trans       &trans  &trans    &trans    &trans    &trans
            >;
        };

        layer_4 {
            bindings = <
&bootloader       &none  &kp C_VOLUME_DOWN        &kp K_MUTE  &kp C_VOLUME_UP                 &none                   &none  &kp F1   &kp F2   &kp F3   &kp F4  &bootloader
 &sys_reset       &none         &kp C_PREV  &kp C_PLAY_PAUSE       &kp C_NEXT  &kp C_BRIGHTNESS_DEC    &kp C_BRIGHTNESS_INC  &kp F5   &kp F6   &kp F7   &kp F8   &sys_reset
     &trans  &bt BT_CLR       &bt BT_SEL 0      &bt BT_SEL 1     &bt BT_SEL 2            &bt BT_PRV              &bt BT_NXT  &kp F9  &kp F10  &kp F11  &kp F12       &trans
                                                      &trans           &trans                &trans                  &trans  &trans   &trans
            >;
        };
    };
};
